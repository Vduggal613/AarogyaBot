import re
# import long_responses as long

def message_probability(user_message, recoganised_words, single_response=False,  required_words=[]):
    message_certainty = 0

    has_required_words = True

    # Counts how many words are present in each predefined message
    for word in user_message:
        if word in recoganised_words:
            message_certainty += 1

    # Calculate  the percent of recognised words in a user message
    percentage = float(message_certainty) / float(len(recoganised_words))

             # Checks that the required words are in the string
    for word in required_words:
        if word not in user_message:
            has_required_words = False
            break

    if has_required_words or single_response:
        return int(percentage*100)
    else:
        return 0


def check_all_messages(message):
        highest_prob_list = {}

        def response(bot_response, list_of_words, single_response=False, required_words=[]):
            nonlocal highest_prob_list
            highest_prob_list[bot_response] = message_probability(message, list_of_words, single_response, required_words)

        # Response -------------------------------------------------------------
        response('Hello! I am your chatbot based on your symptoms here i predict your disease And i also suggest treatment for that prediction disease. Tell your symptoms', ['hello', 'hi', 'sup', 'heyo'], single_response=True)
        response('I\'m doing fine, and you?', ['how', 'hw', 'you', 'doing'])
        response('Oh Great!', ['fine', 'good', ])
        response('Which type of fever!', ['fever', 'fvr'])
        response('Isolate yourself in a well ventilated room . Mask should be discarded only after disinfecting it with 1% Sodium Hypochlorite. Take rest and drink a lot of fluids to maintain adequate hydration.', ['cure'])
        response('Most common symptoms: 1. fever 2. cough 3. tiredness 4. loss of taste or smell', ['symptoms', 'symptom'])
        response('No I am in a meeting!', ['call', 'message', ])
        response('After 1 hour!', ['when'])
        response('GoodBye!', ['bye', 'goodbye', ])
        response('You Cannot Send Empty Message!', ['',])
        response('Hello! How can I help you?', ['help'])

        best_match = max(highest_prob_list, key=highest_prob_list.get)
        print(highest_prob_list)

        return best_match

def get_response(user_input):
    split_message = re.split(r'\s+|[,;?!.-]\s*',user_input.lower())
    response = check_all_messages(split_message)
    return response


# Testing the response system
while True:
    print('Bot: ' + get_response(input('You: ')))
